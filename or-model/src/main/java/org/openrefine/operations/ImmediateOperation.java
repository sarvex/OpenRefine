package org.openrefine.operations;

import org.openrefine.expr.ParsingException;
import org.openrefine.history.Change;
import org.openrefine.history.History;
import org.openrefine.process.Process;
import org.openrefine.process.QuickHistoryEntryProcess;

/**
 * An operation whose change can be derived directly on the operation metadata.
 * For instance it does not require fetching anything from external data sources or
 * running expensive computations.
 * 
 * @author Antonin Delpeuch
 *
 */
public abstract class ImmediateOperation implements Operation {
    
    /**
     * Returns a change computed directly from the operation metadata. This is
     * expected to return quickly.
     * 
     * @return the change generated by this operation
     * @throws ParsingException
     *     if the operation metadata contains expressions that could not be parsed 
     */
    @Override
    public abstract Change createChange() throws ParsingException;
    
    @Override
    public final Process createProcess(History history) throws Exception {
        return new QuickHistoryEntryProcess(history, getDescription(), this, createChange());
    };
    
}
